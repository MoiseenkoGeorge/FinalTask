@*User.Identity.IsAuthenticated*@
@if (User.Identity.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "User", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            @*@if (User.IsInRole("Administrator"))
            {
                <li>@Html.ActionLink("Edit Profile", "ProfileEdit", "Home")</li>
            }*@

            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@User.Identity.Name<span class="caret"></span></a>
                <ul class="dropdown-menu">
                    <li>
                        @Html.ActionLink("My Profile", "Index", "Profile", new { id = Int32.Parse(Membership.GetUser(User.Identity.Name).UserName) },null )
                    </li>
                    @if (User.IsInRole("Manager"))
                    {
                        <li>
                            @Html.ActionLink("Manage", "Manage", "Profile")
                        </li>
                    }
                    <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
                </ul>
            </li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "User", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "User", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
